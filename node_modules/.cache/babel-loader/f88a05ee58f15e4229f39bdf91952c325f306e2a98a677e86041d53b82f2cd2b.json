{"ast":null,"code":"var _jsxFileName = \"/home/lopezjr/fitnessbud1/src/routes-nav/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute({\n  exact,\n  path,\n  children\n}) {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  console.debug(\"PrivateRoute\", \"exact=\", exact, \"path=\", path, \"currentUser=\", currentUser);\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: exact,\n    path: path,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n}\n_s(PrivateRoute, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Route","Navigate","UserContext","jsxDEV","_jsxDEV","PrivateRoute","exact","path","children","_s","currentUser","console","debug","Redirect","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lopezjr/fitnessbud1/src/routes-nav/PrivateRoute.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Navigate} from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\nfunction PrivateRoute({ exact, path, children }) {\n  const { currentUser } = useContext(UserContext);\n\n  console.debug(\n      \"PrivateRoute\",\n      \"exact=\", exact,\n      \"path=\", path,\n      \"currentUser=\", currentUser,\n  );\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n      <Route exact={exact} path={path}>\n        {children}\n      </Route>\n  );\n}\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,KAAK,EAAEC,QAAQ,QAAO,kBAAkB;AACjD,OAAOC,WAAW,MAAM,qBAAqB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAOA,SAASC,YAAYA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM;IAAEC;EAAY,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EAE/CS,OAAO,CAACC,KAAK,CACT,cAAc,EACd,QAAQ,EAAEN,KAAK,EACf,OAAO,EAAEC,IAAI,EACb,cAAc,EAAEG,WACpB,CAAC;EAED,IAAI,CAACA,WAAW,EAAE;IAChB,oBAAON,OAAA,CAACS,QAAQ;MAACC,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,oBACId,OAAA,CAACJ,KAAK;IAACM,KAAK,EAAEA,KAAM;IAACC,IAAI,EAAEA,IAAK;IAAAC,QAAA,EAC7BA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACT,EAAA,CAnBQJ,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAqBrB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}