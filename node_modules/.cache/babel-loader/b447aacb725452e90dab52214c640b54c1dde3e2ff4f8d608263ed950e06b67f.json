{"ast":null,"code":"var _jsxFileName = \"/home/lopezjr/fitnessbud1/src/components/ExerciseVideos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typography, Box, Stack } from '@mui/material';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseVideos = ({\n  exerciseVideos,\n  name\n}) => {\n  _s();\n  var _exerciseVideos$slice;\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  if (!exerciseVideos.length) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 38\n  }, this);\n  const playVideo = videoId => {\n    setSelectedVideo(videoId);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      marginTop: {\n        lg: '203px',\n        xs: '20px'\n      }\n    },\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        fontSize: {\n          lg: '44px',\n          xs: '25px'\n        }\n      },\n      fontWeight: 700,\n      color: \"white\",\n      mb: \"33px\",\n      children: [\"Watch \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#FF2625',\n          textTransform: 'capitalize'\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this), \" exercise videos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        flexDirection: {\n          lg: 'row'\n        },\n        gap: {\n          lg: '110px',\n          xs: '0px'\n        }\n      },\n      justifyContent: \"flex-start\",\n      flexWrap: \"wrap\",\n      alignItems: \"flex-start\",\n      children: exerciseVideos === null || exerciseVideos === void 0 ? void 0 : (_exerciseVideos$slice = exerciseVideos.slice(0, 3)) === null || _exerciseVideos$slice === void 0 ? void 0 : _exerciseVideos$slice.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: 'pointer',\n          marginBottom: '20px',\n          width: '560px',\n          height: '345px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => playVideo(item.video.videoId),\n          children: [selectedVideo === item.video.videoId ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n            title: \"video-player\",\n            width: \"100%\",\n            height: \"100%\",\n            src: `https://www.youtube.com/embed/${selectedVideo}`,\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n              borderTopLeftRadius: '20px'\n            },\n            src: item.video.thumbnails[0].url,\n            alt: item.video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              bottom: 0,\n              left: 0,\n              width: '100%',\n              bgcolor: 'rgba(0, 0, 0, 0.7)',\n              padding: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: {\n                  lg: '28px',\n                  xs: '18px'\n                }\n              },\n              fontWeight: 600,\n              color: \"white\",\n              mt: \"10px\",\n              maxWidth: \"300px\",\n              textAlign: \"center\",\n              children: item.video.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              fontSize: \"14px\",\n              color: \"white\",\n              mt: \"5px\",\n              textAlign: \"center\",\n              children: item.video.channelName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ExerciseVideos, \"sxgy0ooEX+Me+y0n/sMclmbujtY=\");\n_c = ExerciseVideos;\nexport default ExerciseVideos;\nvar _c;\n$RefreshReg$(_c, \"ExerciseVideos\");","map":{"version":3,"names":["React","useState","Typography","Box","Stack","Loader","jsxDEV","_jsxDEV","ExerciseVideos","exerciseVideos","name","_s","_exerciseVideos$slice","selectedVideo","setSelectedVideo","length","fileName","_jsxFileName","lineNumber","columnNumber","playVideo","videoId","sx","marginTop","lg","xs","p","children","fontSize","fontWeight","color","mb","style","textTransform","flexDirection","gap","justifyContent","flexWrap","alignItems","slice","map","item","index","cursor","marginBottom","width","height","position","onClick","video","title","src","frameBorder","allow","allowFullScreen","objectFit","borderTopLeftRadius","thumbnails","url","alt","bottom","left","bgcolor","padding","mt","maxWidth","textAlign","channelName","_c","$RefreshReg$"],"sources":["/home/lopezjr/fitnessbud1/src/components/ExerciseVideos.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Typography, Box, Stack } from '@mui/material';\nimport Loader from './Loader';\n\nconst ExerciseVideos = ({ exerciseVideos, name }) => {\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  if (!exerciseVideos.length) return <Loader />;\n\n  const playVideo = (videoId) => {\n    setSelectedVideo(videoId);\n  };\n\n  return (\n    <Box sx={{ marginTop: { lg: '203px', xs: '20px' } }} p=\"20px\">\n      <Typography sx={{ fontSize: { lg: '44px', xs: '25px' } }} fontWeight={700} color=\"white\" mb=\"33px\">\n        Watch <span style={{ color: '#FF2625', textTransform: 'capitalize' }}>{name}</span> exercise videos\n      </Typography>\n      <Stack sx={{ flexDirection: { lg: 'row' }, gap: { lg: '110px', xs: '0px' } }} justifyContent=\"flex-start\" flexWrap=\"wrap\" alignItems=\"flex-start\">\n        {exerciseVideos?.slice(0, 3)?.map((item, index) => (\n          <div key={index} style={{ cursor: 'pointer', marginBottom: '20px', width: '560px', height: '345px', position: 'relative' }}>\n            <div onClick={() => playVideo(item.video.videoId)}>\n              {selectedVideo === item.video.videoId ? (\n                <iframe\n                  title=\"video-player\"\n                  width=\"100%\"\n                  height=\"100%\"\n                  src={`https://www.youtube.com/embed/${selectedVideo}`}\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              ) : (\n                <img style={{ width: '100%', height: '100%', objectFit: 'cover', borderTopLeftRadius: '20px' }} src={item.video.thumbnails[0].url} alt={item.video.title} />\n              )}\n              <Box sx={{ position: 'absolute', bottom: 0, left: 0, width: '100%', bgcolor: 'rgba(0, 0, 0, 0.7)', padding: '10px' }}>\n                <Typography sx={{ fontSize: { lg: '28px', xs: '18px' } }} fontWeight={600} color=\"white\" mt=\"10px\" maxWidth=\"300px\" textAlign=\"center\">\n                  {item.video.title}\n                </Typography>\n                <Typography fontSize=\"14px\" color=\"white\" mt=\"5px\" textAlign=\"center\">\n                  {item.video.channelName}\n                </Typography>\n              </Box>\n            </div>\n          </div>\n        ))}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default ExerciseVideos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}